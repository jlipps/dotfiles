#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# NVM / Node
#
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
[ -s "$NVM_DIR/nvm.sh" ] && export NODE_PATH="$(dirname $(dirname $(nvm which current)))/lib/node_modules"

# Bring in system-dependent stuff
if [[ -s "$HOME/.zlocal" ]]; then
    source "$HOME/.zlocal"
fi

# Bring in secrets if they exist
if [[ -s "$HOME/.zsecrets" ]]; then
    source "$HOME/.zsecrets"
fi

# Set up Path based on any system-dependent stuff
if [[ ! -z "$ANDROID_HOME" ]]; then
    export PATH=$PATH:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin
fi

# Pyenv / Python
if [[ "$(which pyenv)" != "" ]]; then
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
fi

if [[ -s "$HOME/.aliases.sh" ]]; then
    source "$HOME/.aliases.sh"
fi

if [[ -s "$HOME/.functions.sh" ]]; then
    source "$HOME/.functions.sh"
fi

if [[ -s "$HOME/.zprivate" ]]; then
    source "$HOME/.zprivate"
fi

# tmuxinator completions
_tmuxinator() {
  local commands projects
  commands=(${(f)"$(tmuxinator commands zsh)"})
  projects=(${(f)"$(tmuxinator completions start)"})

  if (( CURRENT == 2 )); then
    _alternative \
      'commands:: _describe -t commands "tmuxinator subcommands" commands' \
      'projects:: _describe -t projects "tmuxinator projects" projects'
  elif (( CURRENT == 3)); then
    case $words[2] in
      copy|cp|c|debug|delete|rm|open|o|start|s|edit|e)
        _arguments '*:projects:($projects)'
      ;;
    esac
  fi

  return
}

compdef _tmuxinator tmuxinator mux

ulimit -n 8000
